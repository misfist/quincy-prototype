@import 'utilities';

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix {
	content: '';
	display: table;
	table-layout: fixed;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after {
	clear: both;
}

// Column width with margin
@mixin column-width($numberColumns: 3) {
	width: map-get($columns, $numberColumns) - $columns__margin * ($numberColumns - 1) / $numberColumns;
}

@mixin filter-duotone {
	&::before {
		background: $color__link;
		mix-blend-mode: screen;
		opacity: 0.1;
		z-index: 2;
	}

	&::after {
		background: $color__link;
		mix-blend-mode: multiply;
		opacity: 0.8;
		z-index: 3;

		/* Browsers supporting mix-blend-mode don't need opacity < 1 */
		@supports (mix-blend-mode: multiply) {
			opacity: 1;
		}
	}
}

@mixin filter-grayscale {
	filter: grayscale(100%);
	position: relative;
	z-index: 1;

	&::after {
		display: block;
		height: 100%;
		width: 100%;
		z-index: 10;
	}
}

/* If we add the border using a regular CSS border, it won't look good on non-retina devices,
 * since its edges can look jagged due to lack of antialiasing. In this case, we are several
 * layers of box-shadow to add the border visually, which will render the border smoother. */

@mixin box-shadow($size) {
	box-shadow: 0 0 0 $size $color__text-light inset, 0 0 0 ($size + 1px) $color__text-light inset,
		0 0 1px 0 rgba($color__text-light, 0.7);

	// Antialiasing, outer edge.
}

/* Nested sub-menu padding: 10 levels deep */
@mixin nestedSubMenuPadding {
	ul {
		counter-reset: submenu;
	}

	ul > li > a::before {
		content: '– ' counters(submenu, '– ', none);
		counter-increment: submenu;
		font-family: $font__body;
		font-weight: normal;
	}
}

@mixin external-link( $color: $color__light-gray, $size: 1 ) {
	$encoded-color: encodecolor( $color );
	&:after {
		margin-left: .5rem;
		display: inline-block;
		content: '';
		height: #{$size}rem;
		width: #{$size}rem;
		background-image: url("data:image/svg+xml,%3Csvg aria-hidden='true' focusable='false' data-prefix='fas' data-icon='external-link-alt' class='svg-inline--fa fa-external-link-alt fa-w-16' role='img' xmlns='http://www.w3.org/2000/svg' viewBox='0 0 512 512'%3E%3Cpath fill='#{$encoded-color}' d='M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z'%3E%3C/path%3E%3C/svg%3E");
		background-repeat: no-repeat;

		color: $color;
		font-size: #{$size}rem;
		line-height: $size;
		text-decoration: none;
	}
}

@mixin video-link( $color: $color__red, $size: 1 ) {
	$encoded-color: encodecolor( $color );
	&:after {
		margin-left: .5rem;
		display: inline-block;
		content: '';
		height: #{$size}rem;
		width: #{$size}rem;
		background-image: url("data:image/svg+xml,%3Csvg width='26' height='20' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M24.404 20a1.572 1.572 0 001.129-.475A1.625 1.625 0 0026 18.377V1.623a1.647 1.647 0 00-.467-1.148A1.595 1.595 0 0024.403 0H1.598a1.573 1.573 0 00-1.13.475A1.624 1.624 0 000 1.623v16.754a1.646 1.646 0 00.467 1.148 1.593 1.593 0 001.13.475h22.807zm-1.597-3.246H3.193V3.246h19.614v13.508z' fill='#{$encoded-color}'/%3E%3Cpath d='M18 9.5l-4.001 2.249L10 14V5l3.999 2.251L18 9.5z' fill='#{$encoded-color}'/%3E%3C/svg%3E");
		background-repeat: no-repeat;
		color: $color;
		font-size: #{$size}rem;
		line-height: $size;
		text-decoration: none;
	}
}

@mixin flex($wrap: wrap) {
	display: flex;
	flex-wrap: $wrap;
}

@mixin flex-hack($wrap: wrap, $margin: $size__spacing-unit) {
	display: flex;
	flex-wrap: $wrap;
	margin-left: -$margin;
	margin-right: -$margin;

	& > * {
		padding-left: $margin;
		padding-right: $margin;
	}
}

@mixin fullwidth {
	margin-left: calc(50% - 50vw);
	margin-right: calc(50% - 50vw);
	max-width: 100vw;
	min-width: 100vw;
	width: 100vw;
}

@mixin fullbackground($color) {
	position: relative;

	&::before {
		background-color: $color;
		content: '';
		display: block;
		height: 100%;
		left: 0;
		margin-left: -100vw;
		overflow: hidden;
		position: absolute;
		top: 0;
		width: 220vw;
		z-index: -1;
	}
}

@mixin truncate-text( $lines: 3, $line-height: 1.3rem ) {
	max-height: calc( #{$line-height} * #{$lines} );
	text-overflow: ellipsis;

	@supports ( block-overflow: ellipsis ) {
		block-overflow: ellipsis;
	}

	@supports ( display: -webkit-box ) {
		display: -webkit-box;
		-webkit-box-orient: vertical;
		-webkit-line-clamp: $lines;
	}

	/* Required for text-overflow to do anything */
	overflow: hidden;
}

@mixin hidden() {
	overflow: hidden;
	z-index: -1;
	max-height: 0;
	visibility: hidden;
	opacity: 0;
}

@mixin shown() {
	z-index: 2;
	max-height: 999px;
	opacity: 1;
	visibility: visible;
}


@mixin expand-hidden( $transform-origin: bottom ) {
	z-index: -1;
	height: 0;
	transform: scaleY(0);
	transform-origin: $transform-origin;
}

@mixin expand-shown( $transform-origin: bottom ) {
	z-index: 1;
	height: auto;
	transform: scaleY(1);
	transform-origin: $transform-origin;
}

@mixin image-scale( $scale: 1.05 ) {
	overflow: hidden;

	img {
		transition: all .5s cubic-bezier(0.785, 0.135, 0.15, 0.86);
	}

	&:hover {
		img {
			transform: scale( #{$scale} );
		}
	}
}

@keyframes fadein {
    from {
		opacity: 0;
    }
    to {
		opacity: 1;
    }
}

@keyframes fadeout {
    from {
		opacity: 1;
    }
    to {
		opacity: 0;
    }
}

@keyframes blur {
    from {
		filter: blur( 1.25rem );
    }
    to {
		filter: blur( 0 );
    }
}

@import 'classes';
